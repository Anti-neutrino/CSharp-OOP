Design pattern: Simple Factory
	* In class Program method CreateComputers is Simple Factory.

Design pattern: Strategy
	* Choice of Motherboard is Strategy pattern

Design pattern: Template Method
	* Cpu has method SquareNumber() with abstract method GetMaxValue which implemented in Cpu32,Cpu64,Cpu128

Design pattern: Abstract factory
	* Introduce IComputerFactory as a base class for HPComputerFactory and DellComputerFactory
	which creates deference type of  computers.

Design pattern: Composite
	* SinglehardDrive and RaidArray are both hardDrive and RaidArray contains other SinglehardDrive

Design pattern: Mediator
	* Motherboard is mediator for all computer components.

Found bottlenecks:
	* In Cpu.Rand() use unnecessary do-while loop.
	* 

Found bugs:
	* When invalid command was given, the program does not output "Invalid command".
	* When process is executed null reference exception was thrown.
	* 

Single responsibility principle
	* 

Open/closed principle
	* 

Liskov substitution principle
	* 

Interface segregation principle
	* 

Dependency inversion principle
	* 